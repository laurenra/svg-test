/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/*!****************************!*\
  !*** ./src/ts/svg-test.ts ***!
  \****************************/

class Lyrics {
    constructor() {
        this.isShowLyrics = false;
        this.fileLocation = "";
    }
    setDefaults() {
        this.isShowLyrics = false;
    }
    svgCircle() {
        const thisSvg = document.getElementById("circle1");
        if (thisSvg) {
            const styleFillColor = getComputedStyle(thisSvg).fill;
            let fillColor = thisSvg.getAttribute('fill');
            if (fillColor == 'red') {
                thisSvg.setAttribute('fill', 'green');
            }
            else {
                thisSvg.setAttribute('fill', 'red');
            }
        }
    }
    svgTriangle() {
        const thisSvg = document.getElementById("triangle1");
        if (thisSvg) {
            const styleFillColor = getComputedStyle(thisSvg).fill;
            let fillColor = thisSvg.getAttribute('fill');
            if (fillColor == 'lime') {
                thisSvg.setAttribute('fill', 'lightskyblue');
            }
            else {
                thisSvg.setAttribute('fill', 'lime');
            }
        }
    }
    svgHexagon(objectId) {
        const thisSvg = document.getElementById(objectId);
        if (thisSvg) {
            const styleFillColor = getComputedStyle(thisSvg).fill;
            let fillColor = thisSvg.getAttribute('fill');
            if (fillColor == 'orchid') {
                thisSvg.setAttribute('fill', 'aqua');
            }
            else {
                thisSvg.setAttribute('fill', 'orchid');
            }
        }
    }
    svgStar() {
        const thisSvg = document.getElementById("star1");
        if (thisSvg) {
            const styleFillColor = getComputedStyle(thisSvg).fill;
            let fillColor = thisSvg.getAttribute('fill');
            if (fillColor == 'coral') {
                thisSvg.setAttribute('fill', 'yellow');
            }
            else {
                thisSvg.setAttribute('fill', 'coral');
            }
        }
    }
}
const myLyrics = new Lyrics();
console.info("Instantiated myLyrics asdif of Lyrics class...");

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUM7Q0FDRjtBQU1ELE1BQU0sUUFBUSxHQUFHLElBQUksTUFBTSxFQUFFLENBQUM7QUFDOUIsT0FBTyxDQUFDLElBQUksQ0FBQyxnREFBZ0QsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3ZnLXRlc3QvLi9zcmMvdHMvc3ZnLXRlc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFdmVudCBmbG93OlxuICogMS4gU2VsZWN0IGZpbGUgKDxpbnB1dD4gaWQ9ZmlsZVNlbGVjdGVkIGhhbmRsZXIgbWV0aG9kIG5hbWVkIGhhbmRsZUV2ZW50KVxuICogZGlzcGF0Y2hlcyBcImNsaWNrXCIgZXZlbnQgdG8gdHJpZ2dlciA8YnV0dG9uPiBpZD1zdGFydEJ0biBvbmNsaWNrIG1ldGhvZFxuICogbmFtZWQgaW5pdEx5cmljc1RvUHJldmlldy4gVGhlcmUgbWF5IGJlIGEgYmV0dGVyIHdheSB0byBkbyB0aGlzLlxuICpcbiAqIEJlY2F1c2UgdGhlIGhhbmRsZUV2ZW50IGNvbnRleHQgaXMgdGhlIGNhbGxpbmcgZWxlbWVudCdzIGNvbnRleHQgKHRoZVxuICogdGFyZ2V0RWxlbWVudCBvZiB0aGUgPGlucHV0PiBlbGVtZW50KSwgaXQgZG9lc24ndCBoYXZlIHRoZSBjb250ZXh0IG9mIHRoZVxuICogTHlyaWNzIG9iamVjdCwgYW5kIEkgZG9uJ3Qga25vdyBhbnkgd2F5IHRvIGdldCBpdCB0byBhY2Nlc3MgdGhlIHZhcmlhYmxlc1xuICogYW5kIG1ldGhvZHMgaW4gaXQsIGxpa2UgdGhpcy5MeXJpY3NUZXh0LiBUbyB1c2UgdGhlc2UgbWV0aG9kcywgdGhlIHRleHRcbiAqIGZyb20gdGhlIGZpbGUgaXMgY29waWVkIGludG8gPHRleHRhcmVhIGlkPWx5cmljc0VkaXRvcj4sIHRoZW4gdGhlIGZpbGVcbiAqIGlucHV0IGhhbmRsZXIgZGlzcGF0Y2hlcyBhIFwiY2xpY2tcIiBldmVudCB0byA8YnV0dG9uIGlkPXN0YXJ0QnRuPi4gVGhlXG4gKiBzdGFydEJ0biBvbkNsaWNrIGV2ZW50IGhhbmRsZXIgZG9lcyBoYXZlIHRoZSBjb250ZXh0IG9mIHRoZSBMeXJpY3Mgb2JqZWN0XG4gKiBhbmQgaXRzIG1ldGhvZHMsIGJlY2F1c2UgYSBMeXJpY3Mgb2JqZWN0IHdhcyBjcmVhdGVkIGF0IHRoZSBiZWdpbm5pbmcgb2ZcbiAqIHRoZSBwYWdlIGxvYWQgKHNlZSB0aGUgZW5kIG9mIHRoaXMgZmlsZSksIHNvIGl0IHJlYWRzIHRoZSBseXJpY3MgdGV4dCBpblxuICogPHRleHRhcmVhIGlkPWx5cmljc0VkaXRvcj4gYW5kIHBvcHVsYXRlcyB0aGUgdmFyaWFibGVzIGluIHRoZSBMeXJpY3Mgb2JqZWN0LlxuICpcbiAqIFRPRE86IEZpeCBlZGl0IHRleHQgd2l0aCBvZGQgbnVtYmVyZWQgbGluZXMuXG4gKiBUT0RPOiBGaXggZGlzcGxheWluZyAzIGxpbmVzIChvciA0IG9yIDEpLCB3aGVuIGl0IGxvYWRzIGZyb20gZmlsZSwgaXQgY3V0cyBvZmYgdGhlIGxhc3Qgcm93cyBpbnN0ZWFkIG9mIHBhZGRpbmcgd2l0aCBibGFuayBsaW5lc1xuICogVE9ETzogd2hhdCBoYXBwZW5zIGlmIHNvbWVvbmUgZW50ZXJzIG51bWJlciBvdXQgb2YgcmFuZ2U/IERvZXMgaXQgcmVzZXQgdG8gbWF4IG9yIG1pbj8gT3IgZG8gSSBoYXZlIHRvIGRvIHRoYXQ/XG4gKiBUT0RPOiBVcCBkb3duIGFycm93IGtleXMgbW92ZSB0byBwcmV2aW91cyBhbmQgbmV4dCBsaW5lc1xuICovXG5cbi8vIHJlcXVpcmUoJy4uL2Nzcy9zdHlsZS5jc3MnKVxuXG5jbGFzcyBMeXJpY3Mge1xuXG4gIHByaXZhdGUgaXNTaG93THlyaWNzOiBib29sZWFuO1xuICBwcml2YXRlIGZpbGVMb2NhdGlvbjogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaXNTaG93THlyaWNzID0gZmFsc2U7XG4gICAgdGhpcy5maWxlTG9jYXRpb24gPSBcIlwiO1xuICB9XG5cbiAgc2V0RGVmYXVsdHMoKSB7XG4gICAgdGhpcy5pc1Nob3dMeXJpY3MgPSBmYWxzZTtcbiAgfVxuXG4gIHN2Z0NpcmNsZSgpIHtcbiAgICBjb25zdCB0aGlzU3ZnID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaXJjbGUxXCIpO1xuICAgIGlmICh0aGlzU3ZnKSB7XG4gICAgICBjb25zdCBzdHlsZUZpbGxDb2xvciA9IGdldENvbXB1dGVkU3R5bGUodGhpc1N2ZykuZmlsbDtcbiAgICAgIGxldCBmaWxsQ29sb3IgPSB0aGlzU3ZnLmdldEF0dHJpYnV0ZSgnZmlsbCcpO1xuICAgICAgaWYgKGZpbGxDb2xvciA9PSAncmVkJykge1xuICAgICAgICB0aGlzU3ZnLnNldEF0dHJpYnV0ZSgnZmlsbCcsICdncmVlbicpO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHRoaXNTdmcuc2V0QXR0cmlidXRlKCdmaWxsJywgJ3JlZCcpO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBhbGVydChcIllvdSBjbGlja2VkIHRoZSBjaXJjbGVcIik7XG4gIH1cblxuICBzdmdUcmlhbmdsZSgpIHtcbiAgICBjb25zdCB0aGlzU3ZnID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmlhbmdsZTFcIik7XG4gICAgaWYgKHRoaXNTdmcpIHtcbiAgICAgIGNvbnN0IHN0eWxlRmlsbENvbG9yID0gZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzU3ZnKS5maWxsO1xuICAgICAgbGV0IGZpbGxDb2xvciA9IHRoaXNTdmcuZ2V0QXR0cmlidXRlKCdmaWxsJyk7XG4gICAgICBpZiAoZmlsbENvbG9yID09ICdsaW1lJykge1xuICAgICAgICB0aGlzU3ZnLnNldEF0dHJpYnV0ZSgnZmlsbCcsICdsaWdodHNreWJsdWUnKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB0aGlzU3ZnLnNldEF0dHJpYnV0ZSgnZmlsbCcsICdsaW1lJyk7XG4gICAgICB9XG4gICAgfVxuICAgIC8vIGFsZXJ0KFwiWW91IGNsaWNrZWQgdGhlIHRyaWFuZ2xlXCIpO1xuICB9XG5cbiAgc3ZnSGV4YWdvbihvYmplY3RJZDogc3RyaW5nKSB7XG4gICAgY29uc3QgdGhpc1N2ZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG9iamVjdElkKTtcbiAgICBpZiAodGhpc1N2Zykge1xuICAgICAgY29uc3Qgc3R5bGVGaWxsQ29sb3IgPSBnZXRDb21wdXRlZFN0eWxlKHRoaXNTdmcpLmZpbGw7XG4gICAgICBsZXQgZmlsbENvbG9yID0gdGhpc1N2Zy5nZXRBdHRyaWJ1dGUoJ2ZpbGwnKTtcbiAgICAgIGlmIChmaWxsQ29sb3IgPT0gJ29yY2hpZCcpIHtcbiAgICAgICAgdGhpc1N2Zy5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCAnYXF1YScpO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHRoaXNTdmcuc2V0QXR0cmlidXRlKCdmaWxsJywgJ29yY2hpZCcpO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBhbGVydChcIllvdSBjbGlja2VkIHRoZSBoZXhhZ29uXCIpO1xuICB9XG5cbiAgc3ZnU3RhcigpIHtcbiAgICBjb25zdCB0aGlzU3ZnID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdGFyMVwiKTtcbiAgICBpZiAodGhpc1N2Zykge1xuICAgICAgY29uc3Qgc3R5bGVGaWxsQ29sb3IgPSBnZXRDb21wdXRlZFN0eWxlKHRoaXNTdmcpLmZpbGw7XG4gICAgICBsZXQgZmlsbENvbG9yID0gdGhpc1N2Zy5nZXRBdHRyaWJ1dGUoJ2ZpbGwnKTtcbiAgICAgIGlmIChmaWxsQ29sb3IgPT0gJ2NvcmFsJykge1xuICAgICAgICB0aGlzU3ZnLnNldEF0dHJpYnV0ZSgnZmlsbCcsICd5ZWxsb3cnKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB0aGlzU3ZnLnNldEF0dHJpYnV0ZSgnZmlsbCcsICdjb3JhbCcpO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBhbGVydChcIllvdSBjbGlja2VkIHRoZSBzdGFyXCIpO1xuICB9XG59XG5cbi8qKlxuICogQmVnaW4gUHJvZ3JhbVxuICovXG5cbmNvbnN0IG15THlyaWNzID0gbmV3IEx5cmljcygpO1xuY29uc29sZS5pbmZvKFwiSW5zdGFudGlhdGVkIG15THlyaWNzIGFzZGlmIG9mIEx5cmljcyBjbGFzcy4uLlwiKTtcblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9